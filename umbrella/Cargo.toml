[package]
name = "polkadot-sdk"
version = "1.9.0"
edition = "2021"
description = "Polkadot SDK Umbrella crate"

[dependencies]
bridge-runtime-common = { path = '../bridges/bin/runtime-common', default-features = false }
bp-asset-hub-rococo = { path = '../bridges/chains/chain-asset-hub-rococo', default-features = false }
bp-asset-hub-westend = { path = '../bridges/chains/chain-asset-hub-westend', default-features = false }
bp-bridge-hub-cumulus = { path = '../bridges/chains/chain-bridge-hub-cumulus', default-features = false }
bp-bridge-hub-kusama = { path = '../bridges/chains/chain-bridge-hub-kusama', default-features = false }
bp-bridge-hub-polkadot = { path = '../bridges/chains/chain-bridge-hub-polkadot', default-features = false }
bp-bridge-hub-rococo = { path = '../bridges/chains/chain-bridge-hub-rococo', default-features = false }
bp-bridge-hub-westend = { path = '../bridges/chains/chain-bridge-hub-westend', default-features = false }
bp-kusama = { path = '../bridges/chains/chain-kusama', default-features = false }
bp-polkadot = { path = '../bridges/chains/chain-polkadot', default-features = false }
bp-polkadot-bulletin = { path = '../bridges/chains/chain-polkadot-bulletin', default-features = false }
bp-rococo = { path = '../bridges/chains/chain-rococo', default-features = false }
bp-westend = { path = '../bridges/chains/chain-westend', default-features = false }
pallet-bridge-grandpa = { path = '../bridges/modules/grandpa', default-features = false }
pallet-bridge-messages = { path = '../bridges/modules/messages', default-features = false }
pallet-bridge-parachains = { path = '../bridges/modules/parachains', default-features = false }
pallet-bridge-relayers = { path = '../bridges/modules/relayers', default-features = false }
pallet-xcm-bridge-hub = { path = '../bridges/modules/xcm-bridge-hub', default-features = false }
pallet-xcm-bridge-hub-router = { path = '../bridges/modules/xcm-bridge-hub-router', default-features = false }
bp-header-chain = { path = '../bridges/primitives/header-chain', default-features = false }
bp-messages = { path = '../bridges/primitives/messages', default-features = false }
bp-parachains = { path = '../bridges/primitives/parachains', default-features = false }
bp-polkadot-core = { path = '../bridges/primitives/polkadot-core', default-features = false }
bp-relayers = { path = '../bridges/primitives/relayers', default-features = false }
bp-runtime = { path = '../bridges/primitives/runtime', default-features = false }
bp-test-utils = { path = '../bridges/primitives/test-utils', default-features = false }
bp-xcm-bridge-hub = { path = '../bridges/primitives/xcm-bridge-hub', default-features = false }
bp-xcm-bridge-hub-router = { path = '../bridges/primitives/xcm-bridge-hub-router', default-features = false }
snowbridge-pallet-ethereum-client = { path = '../bridges/snowbridge/pallets/ethereum-client', default-features = false }
snowbridge-pallet-ethereum-client-fixtures = { path = '../bridges/snowbridge/pallets/ethereum-client/fixtures', default-features = false }
snowbridge-pallet-inbound-queue = { path = '../bridges/snowbridge/pallets/inbound-queue', default-features = false }
snowbridge-pallet-inbound-queue-fixtures = { path = '../bridges/snowbridge/pallets/inbound-queue/fixtures', default-features = false }
snowbridge-pallet-outbound-queue = { path = '../bridges/snowbridge/pallets/outbound-queue', default-features = false }
snowbridge-outbound-queue-merkle-tree = { path = '../bridges/snowbridge/pallets/outbound-queue/merkle-tree', default-features = false }
snowbridge-outbound-queue-runtime-api = { path = '../bridges/snowbridge/pallets/outbound-queue/runtime-api', default-features = false }
snowbridge-pallet-system = { path = '../bridges/snowbridge/pallets/system', default-features = false }
snowbridge-system-runtime-api = { path = '../bridges/snowbridge/pallets/system/runtime-api', default-features = false }
snowbridge-beacon-primitives = { path = '../bridges/snowbridge/primitives/beacon', default-features = false }
snowbridge-core = { path = '../bridges/snowbridge/primitives/core', default-features = false }
snowbridge-ethereum = { path = '../bridges/snowbridge/primitives/ethereum', default-features = false }
snowbridge-router-primitives = { path = '../bridges/snowbridge/primitives/router', default-features = false }
snowbridge-runtime-common = { path = '../bridges/snowbridge/runtime/runtime-common', default-features = false }
snowbridge-runtime-test-common = { path = '../bridges/snowbridge/runtime/test-common', default-features = false }
cumulus-client-cli = { path = '../cumulus/client/cli', default-features = false }
cumulus-client-collator = { path = '../cumulus/client/collator', default-features = false }
cumulus-client-consensus-aura = { path = '../cumulus/client/consensus/aura', default-features = false }
cumulus-client-consensus-common = { path = '../cumulus/client/consensus/common', default-features = false }
cumulus-client-consensus-proposer = { path = '../cumulus/client/consensus/proposer', default-features = false }
cumulus-client-consensus-relay-chain = { path = '../cumulus/client/consensus/relay-chain', default-features = false }
cumulus-client-network = { path = '../cumulus/client/network', default-features = false }
cumulus-client-parachain-inherent = { path = '../cumulus/client/parachain-inherent', default-features = false }
cumulus-client-pov-recovery = { path = '../cumulus/client/pov-recovery', default-features = false }
cumulus-relay-chain-inprocess-interface = { path = '../cumulus/client/relay-chain-inprocess-interface', default-features = false }
cumulus-relay-chain-interface = { path = '../cumulus/client/relay-chain-interface', default-features = false }
cumulus-relay-chain-minimal-node = { path = '../cumulus/client/relay-chain-minimal-node', default-features = false }
cumulus-relay-chain-rpc-interface = { path = '../cumulus/client/relay-chain-rpc-interface', default-features = false }
cumulus-client-service = { path = '../cumulus/client/service', default-features = false }
cumulus-pallet-aura-ext = { path = '../cumulus/pallets/aura-ext', default-features = false }
pallet-collator-selection = { path = '../cumulus/pallets/collator-selection', default-features = false }
cumulus-pallet-dmp-queue = { path = '../cumulus/pallets/dmp-queue', default-features = false }
cumulus-pallet-parachain-system = { path = '../cumulus/pallets/parachain-system', default-features = false }
cumulus-pallet-parachain-system-proc-macro = { path = '../cumulus/pallets/parachain-system/proc-macro', default-features = false }
cumulus-pallet-session-benchmarking = { path = '../cumulus/pallets/session-benchmarking', default-features = false }
cumulus-pallet-solo-to-para = { path = '../cumulus/pallets/solo-to-para', default-features = false }
cumulus-pallet-xcm = { path = '../cumulus/pallets/xcm', default-features = false }
cumulus-pallet-xcmp-queue = { path = '../cumulus/pallets/xcmp-queue', default-features = false }
parachains-common = { path = '../cumulus/parachains/common', default-features = false }
asset-hub-rococo-emulated-chain = { path = '../cumulus/parachains/integration-tests/emulated/chains/parachains/assets/asset-hub-rococo', default-features = false }
asset-hub-westend-emulated-chain = { path = '../cumulus/parachains/integration-tests/emulated/chains/parachains/assets/asset-hub-westend', default-features = false }
bridge-hub-rococo-emulated-chain = { path = '../cumulus/parachains/integration-tests/emulated/chains/parachains/bridges/bridge-hub-rococo', default-features = false }
bridge-hub-westend-emulated-chain = { path = '../cumulus/parachains/integration-tests/emulated/chains/parachains/bridges/bridge-hub-westend', default-features = false }
collectives-westend-emulated-chain = { path = '../cumulus/parachains/integration-tests/emulated/chains/parachains/collectives/collectives-westend', default-features = false }
people-rococo-emulated-chain = { path = '../cumulus/parachains/integration-tests/emulated/chains/parachains/people/people-rococo', default-features = false }
people-westend-emulated-chain = { path = '../cumulus/parachains/integration-tests/emulated/chains/parachains/people/people-westend', default-features = false }
penpal-emulated-chain = { path = '../cumulus/parachains/integration-tests/emulated/chains/parachains/testing/penpal', default-features = false }
rococo-emulated-chain = { path = '../cumulus/parachains/integration-tests/emulated/chains/relays/rococo', default-features = false }
westend-emulated-chain = { path = '../cumulus/parachains/integration-tests/emulated/chains/relays/westend', default-features = false }
emulated-integration-tests-common = { path = '../cumulus/parachains/integration-tests/emulated/common', default-features = false }
rococo-system-emulated-network = { path = '../cumulus/parachains/integration-tests/emulated/networks/rococo-system', default-features = false }
rococo-westend-system-emulated-network = { path = '../cumulus/parachains/integration-tests/emulated/networks/rococo-westend-system', default-features = false }
westend-system-emulated-network = { path = '../cumulus/parachains/integration-tests/emulated/networks/westend-system', default-features = false }
asset-hub-rococo-integration-tests = { path = '../cumulus/parachains/integration-tests/emulated/tests/assets/asset-hub-rococo', default-features = false }
asset-hub-westend-integration-tests = { path = '../cumulus/parachains/integration-tests/emulated/tests/assets/asset-hub-westend', default-features = false }
bridge-hub-rococo-integration-tests = { path = '../cumulus/parachains/integration-tests/emulated/tests/bridges/bridge-hub-rococo', default-features = false }
bridge-hub-westend-integration-tests = { path = '../cumulus/parachains/integration-tests/emulated/tests/bridges/bridge-hub-westend', default-features = false }
people-rococo-integration-tests = { path = '../cumulus/parachains/integration-tests/emulated/tests/people/people-rococo', default-features = false }
people-westend-integration-tests = { path = '../cumulus/parachains/integration-tests/emulated/tests/people/people-westend', default-features = false }
pallet-collective-content = { path = '../cumulus/parachains/pallets/collective-content', default-features = false }
staging-parachain-info = { path = '../cumulus/parachains/pallets/parachain-info', default-features = false }
cumulus-ping = { path = '../cumulus/parachains/pallets/ping', default-features = false }
asset-hub-rococo-runtime = { path = '../cumulus/parachains/runtimes/assets/asset-hub-rococo', default-features = false }
asset-hub-westend-runtime = { path = '../cumulus/parachains/runtimes/assets/asset-hub-westend', default-features = false }
assets-common = { path = '../cumulus/parachains/runtimes/assets/common', default-features = false }
asset-test-utils = { path = '../cumulus/parachains/runtimes/assets/test-utils', default-features = false }
bridge-hub-rococo-runtime = { path = '../cumulus/parachains/runtimes/bridge-hubs/bridge-hub-rococo', default-features = false }
bridge-hub-westend-runtime = { path = '../cumulus/parachains/runtimes/bridge-hubs/bridge-hub-westend', default-features = false }
bridge-hub-common = { path = '../cumulus/parachains/runtimes/bridge-hubs/common', default-features = false }
bridge-hub-test-utils = { path = '../cumulus/parachains/runtimes/bridge-hubs/test-utils', default-features = false }
collectives-westend-runtime = { path = '../cumulus/parachains/runtimes/collectives/collectives-westend', default-features = false }
testnet-parachains-constants = { path = '../cumulus/parachains/runtimes/constants', default-features = false }
contracts-rococo-runtime = { path = '../cumulus/parachains/runtimes/contracts/contracts-rococo', default-features = false }
coretime-rococo-runtime = { path = '../cumulus/parachains/runtimes/coretime/coretime-rococo', default-features = false }
coretime-westend-runtime = { path = '../cumulus/parachains/runtimes/coretime/coretime-westend', default-features = false }
glutton-westend-runtime = { path = '../cumulus/parachains/runtimes/glutton/glutton-westend', default-features = false }
people-rococo-runtime = { path = '../cumulus/parachains/runtimes/people/people-rococo', default-features = false }
people-westend-runtime = { path = '../cumulus/parachains/runtimes/people/people-westend', default-features = false }
seedling-runtime = { path = '../cumulus/parachains/runtimes/starters/seedling', default-features = false }
shell-runtime = { path = '../cumulus/parachains/runtimes/starters/shell', default-features = false }
parachains-runtimes-test-utils = { path = '../cumulus/parachains/runtimes/test-utils', default-features = false }
penpal-runtime = { path = '../cumulus/parachains/runtimes/testing/penpal', default-features = false }
rococo-parachain-runtime = { path = '../cumulus/parachains/runtimes/testing/rococo-parachain', default-features = false }
cumulus-primitives-aura = { path = '../cumulus/primitives/aura', default-features = false }
cumulus-primitives-core = { path = '../cumulus/primitives/core', default-features = false }
cumulus-primitives-parachain-inherent = { path = '../cumulus/primitives/parachain-inherent', default-features = false }
cumulus-primitives-proof-size-hostfunction = { path = '../cumulus/primitives/proof-size-hostfunction', default-features = false }
cumulus-primitives-storage-weight-reclaim = { path = '../cumulus/primitives/storage-weight-reclaim', default-features = false }
cumulus-primitives-timestamp = { path = '../cumulus/primitives/timestamp', default-features = false }
cumulus-primitives-utility = { path = '../cumulus/primitives/utility', default-features = false }
cumulus-test-client = { path = '../cumulus/test/client', default-features = false }
cumulus-test-relay-sproof-builder = { path = '../cumulus/test/relay-sproof-builder', default-features = false }
cumulus-test-runtime = { path = '../cumulus/test/runtime', default-features = false }
cumulus-test-service = { path = '../cumulus/test/service', default-features = false }
xcm-emulator = { path = '../cumulus/xcm/xcm-emulator', default-features = false }
polkadot-sdk-docs = { path = '../docs/sdk', default-features = false }
polkadot-cli = { path = '../polkadot/cli', default-features = false }
polkadot-core-primitives = { path = '../polkadot/core-primitives', default-features = false }
polkadot-erasure-coding = { path = '../polkadot/erasure-coding', default-features = false }
polkadot-node-collation-generation = { path = '../polkadot/node/collation-generation', default-features = false }
polkadot-node-core-approval-voting = { path = '../polkadot/node/core/approval-voting', default-features = false }
polkadot-node-core-av-store = { path = '../polkadot/node/core/av-store', default-features = false }
polkadot-node-core-backing = { path = '../polkadot/node/core/backing', default-features = false }
polkadot-node-core-bitfield-signing = { path = '../polkadot/node/core/bitfield-signing', default-features = false }
polkadot-node-core-candidate-validation = { path = '../polkadot/node/core/candidate-validation', default-features = false }
polkadot-node-core-chain-api = { path = '../polkadot/node/core/chain-api', default-features = false }
polkadot-node-core-chain-selection = { path = '../polkadot/node/core/chain-selection', default-features = false }
polkadot-node-core-dispute-coordinator = { path = '../polkadot/node/core/dispute-coordinator', default-features = false }
polkadot-node-core-parachains-inherent = { path = '../polkadot/node/core/parachains-inherent', default-features = false }
polkadot-node-core-prospective-parachains = { path = '../polkadot/node/core/prospective-parachains', default-features = false }
polkadot-node-core-provisioner = { path = '../polkadot/node/core/provisioner', default-features = false }
polkadot-node-core-pvf = { path = '../polkadot/node/core/pvf', default-features = false }
polkadot-node-core-pvf-checker = { path = '../polkadot/node/core/pvf-checker', default-features = false }
polkadot-node-core-pvf-common = { path = '../polkadot/node/core/pvf/common', default-features = false }
polkadot-node-core-pvf-execute-worker = { path = '../polkadot/node/core/pvf/execute-worker', default-features = false }
polkadot-node-core-pvf-prepare-worker = { path = '../polkadot/node/core/pvf/prepare-worker', default-features = false }
polkadot-node-core-runtime-api = { path = '../polkadot/node/core/runtime-api', default-features = false }
tracing-gum = { path = '../polkadot/node/gum', default-features = false }
tracing-gum-proc-macro = { path = '../polkadot/node/gum/proc-macro', default-features = false }
polkadot-node-jaeger = { path = '../polkadot/node/jaeger', default-features = false }
polkadot-node-metrics = { path = '../polkadot/node/metrics', default-features = false }
polkadot-approval-distribution = { path = '../polkadot/node/network/approval-distribution', default-features = false }
polkadot-availability-distribution = { path = '../polkadot/node/network/availability-distribution', default-features = false }
polkadot-availability-recovery = { path = '../polkadot/node/network/availability-recovery', default-features = false }
polkadot-availability-bitfield-distribution = { path = '../polkadot/node/network/bitfield-distribution', default-features = false }
polkadot-network-bridge = { path = '../polkadot/node/network/bridge', default-features = false }
polkadot-collator-protocol = { path = '../polkadot/node/network/collator-protocol', default-features = false }
polkadot-dispute-distribution = { path = '../polkadot/node/network/dispute-distribution', default-features = false }
polkadot-gossip-support = { path = '../polkadot/node/network/gossip-support', default-features = false }
polkadot-node-network-protocol = { path = '../polkadot/node/network/protocol', default-features = false }
polkadot-statement-distribution = { path = '../polkadot/node/network/statement-distribution', default-features = false }
polkadot-overseer = { path = '../polkadot/node/overseer', default-features = false }
polkadot-node-primitives = { path = '../polkadot/node/primitives', default-features = false }
polkadot-service = { path = '../polkadot/node/service', default-features = false }
polkadot-node-subsystem = { path = '../polkadot/node/subsystem', default-features = false }
polkadot-node-subsystem-test-helpers = { path = '../polkadot/node/subsystem-test-helpers', default-features = false }
polkadot-node-subsystem-types = { path = '../polkadot/node/subsystem-types', default-features = false }
polkadot-node-subsystem-util = { path = '../polkadot/node/subsystem-util', default-features = false }
polkadot-test-client = { path = '../polkadot/node/test/client', default-features = false }
polkadot-test-service = { path = '../polkadot/node/test/service', default-features = false }
staging-tracking-allocator = { path = '../polkadot/node/tracking-allocator', default-features = false }
zombienet-backchannel = { path = '../polkadot/node/zombienet-backchannel', default-features = false }
polkadot-parachain-primitives = { path = '../polkadot/parachain', default-features = false }
test-parachains = { path = '../polkadot/parachain/test-parachains', default-features = false }
test-parachain-adder = { path = '../polkadot/parachain/test-parachains/adder', default-features = false }
test-parachain-adder-collator = { path = '../polkadot/parachain/test-parachains/adder/collator', default-features = false }
test-parachain-halt = { path = '../polkadot/parachain/test-parachains/halt', default-features = false }
test-parachain-undying = { path = '../polkadot/parachain/test-parachains/undying', default-features = false }
test-parachain-undying-collator = { path = '../polkadot/parachain/test-parachains/undying/collator', default-features = false }
polkadot-primitives = { path = '../polkadot/primitives', default-features = false }
polkadot-primitives-test-helpers = { path = '../polkadot/primitives/test-helpers', default-features = false }
polkadot-rpc = { path = '../polkadot/rpc', default-features = false }
polkadot-runtime-common = { path = '../polkadot/runtime/common', default-features = false }
slot-range-helper = { path = '../polkadot/runtime/common/slot_range_helper', default-features = false }
polkadot-runtime-metrics = { path = '../polkadot/runtime/metrics', default-features = false }
polkadot-runtime-parachains = { path = '../polkadot/runtime/parachains', default-features = false }
rococo-runtime = { path = '../polkadot/runtime/rococo', default-features = false }
rococo-runtime-constants = { path = '../polkadot/runtime/rococo/constants', default-features = false }
polkadot-test-runtime = { path = '../polkadot/runtime/test-runtime', default-features = false }
test-runtime-constants = { path = '../polkadot/runtime/test-runtime/constants', default-features = false }
westend-runtime = { path = '../polkadot/runtime/westend', default-features = false }
westend-runtime-constants = { path = '../polkadot/runtime/westend/constants', default-features = false }
polkadot-statement-table = { path = '../polkadot/statement-table', default-features = false }
staging-xcm = { path = '../polkadot/xcm', default-features = false }
pallet-xcm = { path = '../polkadot/xcm/pallet-xcm', default-features = false }
pallet-xcm-benchmarks = { path = '../polkadot/xcm/pallet-xcm-benchmarks', default-features = false }
xcm-procedural = { path = '../polkadot/xcm/procedural', default-features = false }
staging-xcm-builder = { path = '../polkadot/xcm/xcm-builder', default-features = false }
staging-xcm-executor = { path = '../polkadot/xcm/xcm-executor', default-features = false }
xcm-executor-integration-tests = { path = '../polkadot/xcm/xcm-executor/integration-tests', default-features = false }
xcm-fee-payment-runtime-api = { path = '../polkadot/xcm/xcm-fee-payment-runtime-api', default-features = false }
xcm-simulator = { path = '../polkadot/xcm/xcm-simulator', default-features = false }
xcm-simulator-example = { path = '../polkadot/xcm/xcm-simulator/example', default-features = false }
staging-node-cli = { path = '../substrate/bin/node/cli', default-features = false }
staging-node-inspect = { path = '../substrate/bin/node/inspect', default-features = false }
node-primitives = { path = '../substrate/bin/node/primitives', default-features = false }
node-rpc = { path = '../substrate/bin/node/rpc', default-features = false }
kitchensink-runtime = { path = '../substrate/bin/node/runtime', default-features = false }
node-testing = { path = '../substrate/bin/node/testing', default-features = false }
staging-chain-spec-builder = { path = '../substrate/bin/utils/chain-spec-builder', default-features = false }
subkey = { path = '../substrate/bin/utils/subkey', default-features = false }
sc-allocator = { path = '../substrate/client/allocator', default-features = false }
sc-client-api = { path = '../substrate/client/api', default-features = false }
sc-authority-discovery = { path = '../substrate/client/authority-discovery', default-features = false }
sc-basic-authorship = { path = '../substrate/client/basic-authorship', default-features = false }
sc-block-builder = { path = '../substrate/client/block-builder', default-features = false }
sc-chain-spec = { path = '../substrate/client/chain-spec', default-features = false }
sc-chain-spec-derive = { path = '../substrate/client/chain-spec/derive', default-features = false }
sc-cli = { path = '../substrate/client/cli', default-features = false }
sc-consensus-aura = { path = '../substrate/client/consensus/aura', default-features = false }
sc-consensus-babe = { path = '../substrate/client/consensus/babe', default-features = false }
sc-consensus-babe-rpc = { path = '../substrate/client/consensus/babe/rpc', default-features = false }
sc-consensus-beefy = { path = '../substrate/client/consensus/beefy', default-features = false }
sc-consensus-beefy-rpc = { path = '../substrate/client/consensus/beefy/rpc', default-features = false }
sc-consensus = { path = '../substrate/client/consensus/common', default-features = false }
sc-consensus-epochs = { path = '../substrate/client/consensus/epochs', default-features = false }
sc-consensus-grandpa = { path = '../substrate/client/consensus/grandpa', default-features = false }
sc-consensus-grandpa-rpc = { path = '../substrate/client/consensus/grandpa/rpc', default-features = false }
sc-consensus-manual-seal = { path = '../substrate/client/consensus/manual-seal', default-features = false }
sc-consensus-pow = { path = '../substrate/client/consensus/pow', default-features = false }
sc-consensus-slots = { path = '../substrate/client/consensus/slots', default-features = false }
sc-client-db = { path = '../substrate/client/db', default-features = false }
sc-executor = { path = '../substrate/client/executor', default-features = false }
sc-executor-common = { path = '../substrate/client/executor/common', default-features = false }
sc-executor-polkavm = { path = '../substrate/client/executor/polkavm', default-features = false }
sc-runtime-test = { path = '../substrate/client/executor/runtime-test', default-features = false }
sc-executor-wasmtime = { path = '../substrate/client/executor/wasmtime', default-features = false }
sc-informant = { path = '../substrate/client/informant', default-features = false }
sc-keystore = { path = '../substrate/client/keystore', default-features = false }
mmr-gadget = { path = '../substrate/client/merkle-mountain-range', default-features = false }
mmr-rpc = { path = '../substrate/client/merkle-mountain-range/rpc', default-features = false }
sc-mixnet = { path = '../substrate/client/mixnet', default-features = false }
sc-network = { path = '../substrate/client/network', default-features = false }
sc-network-gossip = { path = '../substrate/client/network-gossip', default-features = false }
sc-network-bitswap = { path = '../substrate/client/network/bitswap', default-features = false }
sc-network-common = { path = '../substrate/client/network/common', default-features = false }
sc-network-light = { path = '../substrate/client/network/light', default-features = false }
sc-network-statement = { path = '../substrate/client/network/statement', default-features = false }
sc-network-sync = { path = '../substrate/client/network/sync', default-features = false }
sc-network-test = { path = '../substrate/client/network/test', default-features = false }
sc-network-transactions = { path = '../substrate/client/network/transactions', default-features = false }
sc-offchain = { path = '../substrate/client/offchain', default-features = false }
sc-proposer-metrics = { path = '../substrate/client/proposer-metrics', default-features = false }
sc-rpc = { path = '../substrate/client/rpc', default-features = false }
sc-rpc-api = { path = '../substrate/client/rpc-api', default-features = false }
sc-rpc-server = { path = '../substrate/client/rpc-servers', default-features = false }
sc-rpc-spec-v2 = { path = '../substrate/client/rpc-spec-v2', default-features = false }
sc-service = { path = '../substrate/client/service', default-features = false }
sc-service-test = { path = '../substrate/client/service/test', default-features = false }
sc-state-db = { path = '../substrate/client/state-db', default-features = false }
sc-statement-store = { path = '../substrate/client/statement-store', default-features = false }
sc-storage-monitor = { path = '../substrate/client/storage-monitor', default-features = false }
sc-sync-state-rpc = { path = '../substrate/client/sync-state-rpc', default-features = false }
sc-sysinfo = { path = '../substrate/client/sysinfo', default-features = false }
sc-telemetry = { path = '../substrate/client/telemetry', default-features = false }
sc-tracing = { path = '../substrate/client/tracing', default-features = false }
sc-tracing-proc-macro = { path = '../substrate/client/tracing/proc-macro', default-features = false }
sc-transaction-pool = { path = '../substrate/client/transaction-pool', default-features = false }
sc-transaction-pool-api = { path = '../substrate/client/transaction-pool/api', default-features = false }
sc-utils = { path = '../substrate/client/utils', default-features = false }
sp-core-hashing = { path = '../substrate/deprecated/hashing', default-features = false }
sp-core-hashing-proc-macro = { path = '../substrate/deprecated/hashing/proc-macro', default-features = false }
frame = { path = '../substrate/frame', default-features = false }
pallet-alliance = { path = '../substrate/frame/alliance', default-features = false }
pallet-asset-conversion = { path = '../substrate/frame/asset-conversion', default-features = false }
pallet-asset-rate = { path = '../substrate/frame/asset-rate', default-features = false }
pallet-assets = { path = '../substrate/frame/assets', default-features = false }
pallet-atomic-swap = { path = '../substrate/frame/atomic-swap', default-features = false }
pallet-aura = { path = '../substrate/frame/aura', default-features = false }
pallet-authority-discovery = { path = '../substrate/frame/authority-discovery', default-features = false }
pallet-authorship = { path = '../substrate/frame/authorship', default-features = false }
pallet-babe = { path = '../substrate/frame/babe', default-features = false }
pallet-bags-list = { path = '../substrate/frame/bags-list', default-features = false }
pallet-bags-list-remote-tests = { path = '../substrate/frame/bags-list/remote-tests', default-features = false }
pallet-balances = { path = '../substrate/frame/balances', default-features = false }
pallet-beefy = { path = '../substrate/frame/beefy', default-features = false }
pallet-beefy-mmr = { path = '../substrate/frame/beefy-mmr', default-features = false }
frame-benchmarking = { path = '../substrate/frame/benchmarking', default-features = false }
frame-benchmarking-pallet-pov = { path = '../substrate/frame/benchmarking/pov', default-features = false }
pallet-bounties = { path = '../substrate/frame/bounties', default-features = false }
pallet-broker = { path = '../substrate/frame/broker', default-features = false }
pallet-child-bounties = { path = '../substrate/frame/child-bounties', default-features = false }
pallet-collective = { path = '../substrate/frame/collective', default-features = false }
pallet-contracts = { path = '../substrate/frame/contracts', default-features = false }
pallet-contracts-fixtures = { path = '../substrate/frame/contracts/fixtures', default-features = false }
pallet-contracts-mock-network = { path = '../substrate/frame/contracts/mock-network', default-features = false }
pallet-contracts-proc-macro = { path = '../substrate/frame/contracts/proc-macro', default-features = false }
pallet-contracts-uapi = { path = '../substrate/frame/contracts/uapi', default-features = false }
pallet-conviction-voting = { path = '../substrate/frame/conviction-voting', default-features = false }
pallet-core-fellowship = { path = '../substrate/frame/core-fellowship', default-features = false }
pallet-democracy = { path = '../substrate/frame/democracy', default-features = false }
pallet-election-provider-multi-phase = { path = '../substrate/frame/election-provider-multi-phase', default-features = false }
pallet-election-provider-e2e-test = { path = '../substrate/frame/election-provider-multi-phase/test-staking-e2e', default-features = false }
frame-election-provider-support = { path = '../substrate/frame/election-provider-support', default-features = false }
pallet-election-provider-support-benchmarking = { path = '../substrate/frame/election-provider-support/benchmarking', default-features = false }
frame-election-provider-solution-type = { path = '../substrate/frame/election-provider-support/solution-type', default-features = false }
pallet-elections-phragmen = { path = '../substrate/frame/elections-phragmen', default-features = false }
pallet-examples = { path = '../substrate/frame/examples', default-features = false }
pallet-example-basic = { path = '../substrate/frame/examples/basic', default-features = false }
pallet-default-config-example = { path = '../substrate/frame/examples/default-config', default-features = false }
pallet-dev-mode = { path = '../substrate/frame/examples/dev-mode', default-features = false }
pallet-example-frame-crate = { path = '../substrate/frame/examples/frame-crate', default-features = false }
pallet-example-kitchensink = { path = '../substrate/frame/examples/kitchensink', default-features = false }
pallet-example-offchain-worker = { path = '../substrate/frame/examples/offchain-worker', default-features = false }
pallet-example-single-block-migrations = { path = '../substrate/frame/examples/single-block-migrations', default-features = false }
pallet-example-split = { path = '../substrate/frame/examples/split', default-features = false }
pallet-example-tasks = { path = '../substrate/frame/examples/tasks', default-features = false }
frame-executive = { path = '../substrate/frame/executive', default-features = false }
pallet-fast-unstake = { path = '../substrate/frame/fast-unstake', default-features = false }
pallet-glutton = { path = '../substrate/frame/glutton', default-features = false }
pallet-grandpa = { path = '../substrate/frame/grandpa', default-features = false }
pallet-identity = { path = '../substrate/frame/identity', default-features = false }
pallet-im-online = { path = '../substrate/frame/im-online', default-features = false }
pallet-indices = { path = '../substrate/frame/indices', default-features = false }
pallet-insecure-randomness-collective-flip = { path = '../substrate/frame/insecure-randomness-collective-flip', default-features = false }
pallet-lottery = { path = '../substrate/frame/lottery', default-features = false }
pallet-membership = { path = '../substrate/frame/membership', default-features = false }
pallet-mmr = { path = '../substrate/frame/merkle-mountain-range', default-features = false }
pallet-message-queue = { path = '../substrate/frame/message-queue', default-features = false }
pallet-migrations = { path = '../substrate/frame/migrations', default-features = false }
pallet-mixnet = { path = '../substrate/frame/mixnet', default-features = false }
pallet-multisig = { path = '../substrate/frame/multisig', default-features = false }
pallet-nft-fractionalization = { path = '../substrate/frame/nft-fractionalization', default-features = false }
pallet-nfts = { path = '../substrate/frame/nfts', default-features = false }
pallet-nfts-runtime-api = { path = '../substrate/frame/nfts/runtime-api', default-features = false }
pallet-nis = { path = '../substrate/frame/nis', default-features = false }
pallet-node-authorization = { path = '../substrate/frame/node-authorization', default-features = false }
pallet-nomination-pools = { path = '../substrate/frame/nomination-pools', default-features = false }
pallet-nomination-pools-benchmarking = { path = '../substrate/frame/nomination-pools/benchmarking', default-features = false }
pallet-nomination-pools-runtime-api = { path = '../substrate/frame/nomination-pools/runtime-api', default-features = false }
pallet-nomination-pools-test-staking = { path = '../substrate/frame/nomination-pools/test-staking', default-features = false }
pallet-offences = { path = '../substrate/frame/offences', default-features = false }
pallet-offences-benchmarking = { path = '../substrate/frame/offences/benchmarking', default-features = false }
pallet-paged-list = { path = '../substrate/frame/paged-list', default-features = false }
pallet-parameters = { path = '../substrate/frame/parameters', default-features = false }
pallet-preimage = { path = '../substrate/frame/preimage', default-features = false }
pallet-proxy = { path = '../substrate/frame/proxy', default-features = false }
pallet-ranked-collective = { path = '../substrate/frame/ranked-collective', default-features = false }
pallet-recovery = { path = '../substrate/frame/recovery', default-features = false }
pallet-referenda = { path = '../substrate/frame/referenda', default-features = false }
pallet-remark = { path = '../substrate/frame/remark', default-features = false }
pallet-root-offences = { path = '../substrate/frame/root-offences', default-features = false }
pallet-root-testing = { path = '../substrate/frame/root-testing', default-features = false }
pallet-safe-mode = { path = '../substrate/frame/safe-mode', default-features = false }
pallet-salary = { path = '../substrate/frame/salary', default-features = false }
pallet-sassafras = { path = '../substrate/frame/sassafras', default-features = false }
pallet-scheduler = { path = '../substrate/frame/scheduler', default-features = false }
pallet-scored-pool = { path = '../substrate/frame/scored-pool', default-features = false }
pallet-session = { path = '../substrate/frame/session', default-features = false }
pallet-session-benchmarking = { path = '../substrate/frame/session/benchmarking', default-features = false }
pallet-society = { path = '../substrate/frame/society', default-features = false }
pallet-staking = { path = '../substrate/frame/staking', default-features = false }
pallet-staking-reward-curve = { path = '../substrate/frame/staking/reward-curve', default-features = false }
pallet-staking-reward-fn = { path = '../substrate/frame/staking/reward-fn', default-features = false }
pallet-staking-runtime-api = { path = '../substrate/frame/staking/runtime-api', default-features = false }
pallet-state-trie-migration = { path = '../substrate/frame/state-trie-migration', default-features = false }
pallet-statement = { path = '../substrate/frame/statement', default-features = false }
pallet-sudo = { path = '../substrate/frame/sudo', default-features = false }
frame-support = { path = '../substrate/frame/support', default-features = false }
frame-support-procedural = { path = '../substrate/frame/support/procedural', default-features = false }
frame-support-procedural-tools = { path = '../substrate/frame/support/procedural/tools', default-features = false }
frame-support-procedural-tools-derive = { path = '../substrate/frame/support/procedural/tools/derive', default-features = false }
frame-support-test = { path = '../substrate/frame/support/test', default-features = false }
frame-support-test-compile-pass = { path = '../substrate/frame/support/test/compile_pass', default-features = false }
frame-support-test-pallet = { path = '../substrate/frame/support/test/pallet', default-features = false }
frame-support-test-stg-frame-crate = { path = '../substrate/frame/support/test/stg_frame_crate', default-features = false }
frame-system = { path = '../substrate/frame/system', default-features = false }
frame-system-benchmarking = { path = '../substrate/frame/system/benchmarking', default-features = false }
frame-system-rpc-runtime-api = { path = '../substrate/frame/system/rpc/runtime-api', default-features = false }
pallet-timestamp = { path = '../substrate/frame/timestamp', default-features = false }
pallet-tips = { path = '../substrate/frame/tips', default-features = false }
pallet-transaction-payment = { path = '../substrate/frame/transaction-payment', default-features = false }
pallet-asset-conversion-tx-payment = { path = '../substrate/frame/transaction-payment/asset-conversion-tx-payment', default-features = false }
pallet-asset-tx-payment = { path = '../substrate/frame/transaction-payment/asset-tx-payment', default-features = false }
pallet-transaction-payment-rpc = { path = '../substrate/frame/transaction-payment/rpc', default-features = false }
pallet-transaction-payment-rpc-runtime-api = { path = '../substrate/frame/transaction-payment/rpc/runtime-api', default-features = false }
pallet-skip-feeless-payment = { path = '../substrate/frame/transaction-payment/skip-feeless-payment', default-features = false }
pallet-transaction-storage = { path = '../substrate/frame/transaction-storage', default-features = false }
pallet-treasury = { path = '../substrate/frame/treasury', default-features = false }
frame-try-runtime = { path = '../substrate/frame/try-runtime', default-features = false }
pallet-tx-pause = { path = '../substrate/frame/tx-pause', default-features = false }
pallet-uniques = { path = '../substrate/frame/uniques', default-features = false }
pallet-utility = { path = '../substrate/frame/utility', default-features = false }
pallet-vesting = { path = '../substrate/frame/vesting', default-features = false }
pallet-whitelist = { path = '../substrate/frame/whitelist', default-features = false }
sp-api = { path = '../substrate/primitives/api', default-features = false }
sp-api-proc-macro = { path = '../substrate/primitives/api/proc-macro', default-features = false }
sp-application-crypto = { path = '../substrate/primitives/application-crypto', default-features = false }
sp-application-crypto-test = { path = '../substrate/primitives/application-crypto/test', default-features = false }
sp-arithmetic = { path = '../substrate/primitives/arithmetic', default-features = false }
sp-authority-discovery = { path = '../substrate/primitives/authority-discovery', default-features = false }
sp-block-builder = { path = '../substrate/primitives/block-builder', default-features = false }
sp-blockchain = { path = '../substrate/primitives/blockchain', default-features = false }
sp-consensus-aura = { path = '../substrate/primitives/consensus/aura', default-features = false }
sp-consensus-babe = { path = '../substrate/primitives/consensus/babe', default-features = false }
sp-consensus-beefy = { path = '../substrate/primitives/consensus/beefy', default-features = false }
sp-consensus = { path = '../substrate/primitives/consensus/common', default-features = false }
sp-consensus-grandpa = { path = '../substrate/primitives/consensus/grandpa', default-features = false }
sp-consensus-pow = { path = '../substrate/primitives/consensus/pow', default-features = false }
sp-consensus-sassafras = { path = '../substrate/primitives/consensus/sassafras', default-features = false }
sp-consensus-slots = { path = '../substrate/primitives/consensus/slots', default-features = false }
sp-core = { path = '../substrate/primitives/core', default-features = false }
sp-crypto-ec-utils = { path = '../substrate/primitives/crypto/ec-utils', default-features = false }
sp-crypto-hashing = { path = '../substrate/primitives/crypto/hashing', default-features = false }
sp-crypto-hashing-proc-macro = { path = '../substrate/primitives/crypto/hashing/proc-macro', default-features = false }
sp-database = { path = '../substrate/primitives/database', default-features = false }
sp-debug-derive = { path = '../substrate/primitives/debug-derive', default-features = false }
sp-externalities = { path = '../substrate/primitives/externalities', default-features = false }
sp-genesis-builder = { path = '../substrate/primitives/genesis-builder', default-features = false }
sp-inherents = { path = '../substrate/primitives/inherents', default-features = false }
sp-io = { path = '../substrate/primitives/io', default-features = false }
sp-keyring = { path = '../substrate/primitives/keyring', default-features = false }
sp-keystore = { path = '../substrate/primitives/keystore', default-features = false }
sp-maybe-compressed-blob = { path = '../substrate/primitives/maybe-compressed-blob', default-features = false }
sp-mmr-primitives = { path = '../substrate/primitives/merkle-mountain-range', default-features = false }
sp-metadata-ir = { path = '../substrate/primitives/metadata-ir', default-features = false }
sp-mixnet = { path = '../substrate/primitives/mixnet', default-features = false }
sp-npos-elections = { path = '../substrate/primitives/npos-elections', default-features = false }
sp-offchain = { path = '../substrate/primitives/offchain', default-features = false }
sp-panic-handler = { path = '../substrate/primitives/panic-handler', default-features = false }
sp-rpc = { path = '../substrate/primitives/rpc', default-features = false }
sp-runtime = { path = '../substrate/primitives/runtime', default-features = false }
sp-runtime-interface = { path = '../substrate/primitives/runtime-interface', default-features = false }
sp-runtime-interface-proc-macro = { path = '../substrate/primitives/runtime-interface/proc-macro', default-features = false }
sp-runtime-interface-test = { path = '../substrate/primitives/runtime-interface/test', default-features = false }
sp-runtime-interface-test-wasm = { path = '../substrate/primitives/runtime-interface/test-wasm', default-features = false }
sp-runtime-interface-test-wasm-deprecated = { path = '../substrate/primitives/runtime-interface/test-wasm-deprecated', default-features = false }
sp-session = { path = '../substrate/primitives/session', default-features = false }
sp-staking = { path = '../substrate/primitives/staking', default-features = false }
sp-state-machine = { path = '../substrate/primitives/state-machine', default-features = false }
sp-statement-store = { path = '../substrate/primitives/statement-store', default-features = false }
sp-std = { path = '../substrate/primitives/std', default-features = false }
sp-storage = { path = '../substrate/primitives/storage', default-features = false }
sp-test-primitives = { path = '../substrate/primitives/test-primitives', default-features = false }
sp-timestamp = { path = '../substrate/primitives/timestamp', default-features = false }
sp-tracing = { path = '../substrate/primitives/tracing', default-features = false }
sp-transaction-pool = { path = '../substrate/primitives/transaction-pool', default-features = false }
sp-transaction-storage-proof = { path = '../substrate/primitives/transaction-storage-proof', default-features = false }
sp-trie = { path = '../substrate/primitives/trie', default-features = false }
sp-version = { path = '../substrate/primitives/version', default-features = false }
sp-version-proc-macro = { path = '../substrate/primitives/version/proc-macro', default-features = false }
sp-wasm-interface = { path = '../substrate/primitives/wasm-interface', default-features = false }
sp-weights = { path = '../substrate/primitives/weights', default-features = false }
substrate-test-utils = { path = '../substrate/test-utils', default-features = false }
substrate-cli-test-utils = { path = '../substrate/test-utils/cli', default-features = false }
substrate-test-client = { path = '../substrate/test-utils/client', default-features = false }
substrate-test-runtime = { path = '../substrate/test-utils/runtime', default-features = false }
substrate-test-runtime-client = { path = '../substrate/test-utils/runtime/client', default-features = false }
substrate-test-runtime-transaction-pool = { path = '../substrate/test-utils/runtime/transaction-pool', default-features = false }
binary-merkle-tree = { path = '../substrate/utils/binary-merkle-tree', default-features = false }
substrate-build-script-utils = { path = '../substrate/utils/build-script-utils', default-features = false }
fork-tree = { path = '../substrate/utils/fork-tree', default-features = false }
frame-benchmarking-cli = { path = '../substrate/utils/frame/benchmarking-cli', default-features = false }
substrate-frame-cli = { path = '../substrate/utils/frame/frame-utilities-cli', default-features = false }
generate-bags = { path = '../substrate/utils/frame/generate-bags', default-features = false }
frame-remote-externalities = { path = '../substrate/utils/frame/remote-externalities', default-features = false }
substrate-rpc-client = { path = '../substrate/utils/frame/rpc/client', default-features = false }
substrate-state-trie-migration-rpc = { path = '../substrate/utils/frame/rpc/state-trie-migration-rpc', default-features = false }
substrate-frame-rpc-support = { path = '../substrate/utils/frame/rpc/support', default-features = false }
substrate-frame-rpc-system = { path = '../substrate/utils/frame/rpc/system', default-features = false }
try-runtime-cli = { path = '../substrate/utils/frame/try-runtime/cli', default-features = false }
substrate-prometheus-endpoint = { path = '../substrate/utils/prometheus', default-features = false }
substrate-bip39 = { path = '../substrate/utils/substrate-bip39', default-features = false }
substrate-wasm-builder = { path = '../substrate/utils/wasm-builder', default-features = false }
minimal-template-node = { path = '../templates/minimal/node', default-features = false }
pallet-minimal-template = { path = '../templates/minimal/pallets/template', default-features = false }
minimal-template-runtime = { path = '../templates/minimal/runtime', default-features = false }
pallet-template = { path = '../templates/solochain/pallets/template', default-features = false }
solochain-template-runtime = { path = '../templates/solochain/runtime', default-features = false }
pallet-parachain-template = { path = '../templates/parachain/pallets/template', default-features = false }
parachain-template-runtime = { path = '../templates/parachain/runtime', default-features = false }

[features]
default = [ "std" ]
std = [
	"asset-hub-rococo-runtime/std",
	"asset-hub-westend-runtime/std",
	"asset-test-utils/std",
	"assets-common/std",
	"binary-merkle-tree/std",
	"bp-asset-hub-rococo/std",
	"bp-asset-hub-westend/std",
	"bp-bridge-hub-cumulus/std",
	"bp-bridge-hub-kusama/std",
	"bp-bridge-hub-polkadot/std",
	"bp-bridge-hub-rococo/std",
	"bp-bridge-hub-westend/std",
	"bp-header-chain/std",
	"bp-kusama/std",
	"bp-messages/std",
	"bp-parachains/std",
	"bp-polkadot/std",
	"bp-polkadot-bulletin/std",
	"bp-polkadot-core/std",
	"bp-relayers/std",
	"bp-rococo/std",
	"bp-runtime/std",
	"bp-test-utils/std",
	"bp-westend/std",
	"bp-xcm-bridge-hub/std",
	"bp-xcm-bridge-hub-router/std",
	"bridge-hub-common/std",
	"bridge-hub-rococo-runtime/std",
	"bridge-hub-test-utils/std",
	"bridge-hub-westend-runtime/std",
	"bridge-runtime-common/std",
	"collectives-westend-runtime/std",
	"contracts-rococo-runtime/std",
	"coretime-rococo-runtime/std",
	"coretime-westend-runtime/std",
	"cumulus-pallet-aura-ext/std",
	"cumulus-pallet-dmp-queue/std",
	"cumulus-pallet-parachain-system/std",
	"cumulus-pallet-parachain-system-proc-macro/std",
	"cumulus-pallet-session-benchmarking/std",
	"cumulus-pallet-solo-to-para/std",
	"cumulus-pallet-xcm/std",
	"cumulus-pallet-xcmp-queue/std",
	"cumulus-ping/std",
	"cumulus-primitives-aura/std",
	"cumulus-primitives-core/std",
	"cumulus-primitives-parachain-inherent/std",
	"cumulus-primitives-proof-size-hostfunction/std",
	"cumulus-primitives-storage-weight-reclaim/std",
	"cumulus-primitives-timestamp/std",
	"cumulus-primitives-utility/std",
	"cumulus-test-relay-sproof-builder/std",
	"cumulus-test-runtime/std",
	"frame/std",
	"frame-benchmarking/std",
	"frame-benchmarking-pallet-pov/std",
	"frame-election-provider-support/std",
	"frame-executive/std",
	"frame-support/std",
	"frame-support-procedural/std",
	"frame-support-test/std",
	"frame-support-test-compile-pass/std",
	"frame-support-test-pallet/std",
	"frame-support-test-stg-frame-crate/std",
	"frame-system/std",
	"frame-system-benchmarking/std",
	"frame-system-rpc-runtime-api/std",
	"frame-try-runtime/std",
	"glutton-westend-runtime/std",
	"kitchensink-runtime/std",
	"minimal-template-runtime/std",
	"node-primitives/std",
	"pallet-alliance/std",
	"pallet-asset-conversion/std",
	"pallet-asset-conversion-tx-payment/std",
	"pallet-asset-rate/std",
	"pallet-asset-tx-payment/std",
	"pallet-assets/std",
	"pallet-atomic-swap/std",
	"pallet-aura/std",
	"pallet-authority-discovery/std",
	"pallet-authorship/std",
	"pallet-babe/std",
	"pallet-bags-list/std",
	"pallet-balances/std",
	"pallet-beefy/std",
	"pallet-beefy-mmr/std",
	"pallet-bounties/std",
	"pallet-bridge-grandpa/std",
	"pallet-bridge-messages/std",
	"pallet-bridge-parachains/std",
	"pallet-bridge-relayers/std",
	"pallet-broker/std",
	"pallet-child-bounties/std",
	"pallet-collator-selection/std",
	"pallet-collective/std",
	"pallet-collective-content/std",
	"pallet-contracts/std",
	"pallet-contracts-mock-network/std",
	"pallet-conviction-voting/std",
	"pallet-core-fellowship/std",
	"pallet-default-config-example/std",
	"pallet-democracy/std",
	"pallet-dev-mode/std",
	"pallet-election-provider-multi-phase/std",
	"pallet-election-provider-support-benchmarking/std",
	"pallet-elections-phragmen/std",
	"pallet-example-basic/std",
	"pallet-example-frame-crate/std",
	"pallet-example-kitchensink/std",
	"pallet-example-offchain-worker/std",
	"pallet-example-single-block-migrations/std",
	"pallet-example-split/std",
	"pallet-example-tasks/std",
	"pallet-examples/std",
	"pallet-fast-unstake/std",
	"pallet-glutton/std",
	"pallet-grandpa/std",
	"pallet-identity/std",
	"pallet-im-online/std",
	"pallet-indices/std",
	"pallet-insecure-randomness-collective-flip/std",
	"pallet-lottery/std",
	"pallet-membership/std",
	"pallet-message-queue/std",
	"pallet-migrations/std",
	"pallet-minimal-template/std",
	"pallet-mixnet/std",
	"pallet-mmr/std",
	"pallet-multisig/std",
	"pallet-nft-fractionalization/std",
	"pallet-nfts/std",
	"pallet-nfts-runtime-api/std",
	"pallet-nis/std",
	"pallet-node-authorization/std",
	"pallet-nomination-pools/std",
	"pallet-nomination-pools-benchmarking/std",
	"pallet-nomination-pools-runtime-api/std",
	"pallet-offences/std",
	"pallet-offences-benchmarking/std",
	"pallet-paged-list/std",
	"pallet-parachain-template/std",
	"pallet-parameters/std",
	"pallet-preimage/std",
	"pallet-proxy/std",
	"pallet-ranked-collective/std",
	"pallet-recovery/std",
	"pallet-referenda/std",
	"pallet-remark/std",
	"pallet-root-offences/std",
	"pallet-root-testing/std",
	"pallet-safe-mode/std",
	"pallet-salary/std",
	"pallet-sassafras/std",
	"pallet-scheduler/std",
	"pallet-scored-pool/std",
	"pallet-session/std",
	"pallet-session-benchmarking/std",
	"pallet-skip-feeless-payment/std",
	"pallet-society/std",
	"pallet-staking/std",
	"pallet-staking-reward-fn/std",
	"pallet-staking-runtime-api/std",
	"pallet-state-trie-migration/std",
	"pallet-statement/std",
	"pallet-sudo/std",
	"pallet-template/std",
	"pallet-timestamp/std",
	"pallet-tips/std",
	"pallet-transaction-payment/std",
	"pallet-transaction-payment-rpc-runtime-api/std",
	"pallet-transaction-storage/std",
	"pallet-treasury/std",
	"pallet-tx-pause/std",
	"pallet-uniques/std",
	"pallet-utility/std",
	"pallet-vesting/std",
	"pallet-whitelist/std",
	"pallet-xcm/std",
	"pallet-xcm-benchmarks/std",
	"pallet-xcm-bridge-hub/std",
	"pallet-xcm-bridge-hub-router/std",
	"parachain-template-runtime/std",
	"parachains-common/std",
	"parachains-runtimes-test-utils/std",
	"penpal-runtime/std",
	"people-rococo-runtime/std",
	"people-westend-runtime/std",
	"polkadot-core-primitives/std",
	"polkadot-parachain-primitives/std",
	"polkadot-primitives/std",
	"polkadot-runtime-common/std",
	"polkadot-runtime-metrics/std",
	"polkadot-runtime-parachains/std",
	"polkadot-test-runtime/std",
	"rococo-parachain-runtime/std",
	"rococo-runtime/std",
	"rococo-runtime-constants/std",
	"sc-executor/std",
	"sc-runtime-test/std",
	"seedling-runtime/std",
	"shell-runtime/std",
	"slot-range-helper/std",
	"snowbridge-beacon-primitives/std",
	"snowbridge-core/std",
	"snowbridge-ethereum/std",
	"snowbridge-outbound-queue-merkle-tree/std",
	"snowbridge-outbound-queue-runtime-api/std",
	"snowbridge-pallet-ethereum-client/std",
	"snowbridge-pallet-ethereum-client-fixtures/std",
	"snowbridge-pallet-inbound-queue/std",
	"snowbridge-pallet-inbound-queue-fixtures/std",
	"snowbridge-pallet-outbound-queue/std",
	"snowbridge-pallet-system/std",
	"snowbridge-router-primitives/std",
	"snowbridge-runtime-common/std",
	"snowbridge-runtime-test-common/std",
	"snowbridge-system-runtime-api/std",
	"solochain-template-runtime/std",
	"sp-api/std",
	"sp-api-proc-macro/std",
	"sp-application-crypto/std",
	"sp-arithmetic/std",
	"sp-authority-discovery/std",
	"sp-block-builder/std",
	"sp-consensus-aura/std",
	"sp-consensus-babe/std",
	"sp-consensus-beefy/std",
	"sp-consensus-grandpa/std",
	"sp-consensus-pow/std",
	"sp-consensus-sassafras/std",
	"sp-consensus-slots/std",
	"sp-core/std",
	"sp-core-hashing/std",
	"sp-crypto-ec-utils/std",
	"sp-crypto-hashing/std",
	"sp-debug-derive/std",
	"sp-externalities/std",
	"sp-genesis-builder/std",
	"sp-inherents/std",
	"sp-io/std",
	"sp-keyring/std",
	"sp-keystore/std",
	"sp-metadata-ir/std",
	"sp-mixnet/std",
	"sp-mmr-primitives/std",
	"sp-npos-elections/std",
	"sp-offchain/std",
	"sp-runtime/std",
	"sp-runtime-interface/std",
	"sp-runtime-interface-test-wasm/std",
	"sp-runtime-interface-test-wasm-deprecated/std",
	"sp-session/std",
	"sp-staking/std",
	"sp-state-machine/std",
	"sp-statement-store/std",
	"sp-std/std",
	"sp-storage/std",
	"sp-test-primitives/std",
	"sp-timestamp/std",
	"sp-tracing/std",
	"sp-transaction-pool/std",
	"sp-transaction-storage-proof/std",
	"sp-trie/std",
	"sp-version/std",
	"sp-wasm-interface/std",
	"sp-weights/std",
	"staging-parachain-info/std",
	"staging-xcm/std",
	"staging-xcm-builder/std",
	"staging-xcm-executor/std",
	"substrate-bip39/std",
	"substrate-test-runtime/std",
	"test-parachain-adder/std",
	"test-parachain-halt/std",
	"test-parachain-undying/std",
	"test-parachains/std",
	"test-runtime-constants/std",
	"testnet-parachains-constants/std",
	"westend-runtime/std",
	"westend-runtime-constants/std",
	"xcm-executor-integration-tests/std",
	"xcm-fee-payment-runtime-api/std"
 ]
runtime-benchmarks = [
	"asset-hub-rococo-runtime/runtime-benchmarks",
	"asset-hub-westend-runtime/runtime-benchmarks",
	"assets-common/runtime-benchmarks",
	"bridge-hub-common/runtime-benchmarks",
	"bridge-hub-rococo-runtime/runtime-benchmarks",
	"bridge-hub-westend-runtime/runtime-benchmarks",
	"bridge-runtime-common/runtime-benchmarks",
	"collectives-westend-runtime/runtime-benchmarks",
	"contracts-rococo-runtime/runtime-benchmarks",
	"coretime-rococo-runtime/runtime-benchmarks",
	"coretime-westend-runtime/runtime-benchmarks",
	"cumulus-pallet-dmp-queue/runtime-benchmarks",
	"cumulus-pallet-parachain-system/runtime-benchmarks",
	"cumulus-pallet-session-benchmarking/runtime-benchmarks",
	"cumulus-pallet-xcmp-queue/runtime-benchmarks",
	"cumulus-primitives-core/runtime-benchmarks",
	"cumulus-primitives-utility/runtime-benchmarks",
	"cumulus-test-client/runtime-benchmarks",
	"cumulus-test-service/runtime-benchmarks",
	"frame-benchmarking/runtime-benchmarks",
	"frame-benchmarking-cli/runtime-benchmarks",
	"frame-benchmarking-pallet-pov/runtime-benchmarks",
	"frame-election-provider-support/runtime-benchmarks",
	"frame-support/runtime-benchmarks",
	"frame-system/runtime-benchmarks",
	"frame-system-benchmarking/runtime-benchmarks",
	"glutton-westend-runtime/runtime-benchmarks",
	"kitchensink-runtime/runtime-benchmarks",
	"pallet-alliance/runtime-benchmarks",
	"pallet-asset-conversion/runtime-benchmarks",
	"pallet-asset-rate/runtime-benchmarks",
	"pallet-asset-tx-payment/runtime-benchmarks",
	"pallet-assets/runtime-benchmarks",
	"pallet-babe/runtime-benchmarks",
	"pallet-bags-list/runtime-benchmarks",
	"pallet-balances/runtime-benchmarks",
	"pallet-bounties/runtime-benchmarks",
	"pallet-bridge-grandpa/runtime-benchmarks",
	"pallet-bridge-messages/runtime-benchmarks",
	"pallet-bridge-parachains/runtime-benchmarks",
	"pallet-bridge-relayers/runtime-benchmarks",
	"pallet-broker/runtime-benchmarks",
	"pallet-child-bounties/runtime-benchmarks",
	"pallet-collator-selection/runtime-benchmarks",
	"pallet-collective/runtime-benchmarks",
	"pallet-collective-content/runtime-benchmarks",
	"pallet-contracts/runtime-benchmarks",
	"pallet-contracts-mock-network/runtime-benchmarks",
	"pallet-conviction-voting/runtime-benchmarks",
	"pallet-core-fellowship/runtime-benchmarks",
	"pallet-democracy/runtime-benchmarks",
	"pallet-election-provider-multi-phase/runtime-benchmarks",
	"pallet-election-provider-support-benchmarking/runtime-benchmarks",
	"pallet-elections-phragmen/runtime-benchmarks",
	"pallet-example-basic/runtime-benchmarks",
	"pallet-example-kitchensink/runtime-benchmarks",
	"pallet-example-single-block-migrations/runtime-benchmarks",
	"pallet-example-split/runtime-benchmarks",
	"pallet-example-tasks/runtime-benchmarks",
	"pallet-fast-unstake/runtime-benchmarks",
	"pallet-glutton/runtime-benchmarks",
	"pallet-grandpa/runtime-benchmarks",
	"pallet-identity/runtime-benchmarks",
	"pallet-im-online/runtime-benchmarks",
	"pallet-indices/runtime-benchmarks",
	"pallet-lottery/runtime-benchmarks",
	"pallet-membership/runtime-benchmarks",
	"pallet-message-queue/runtime-benchmarks",
	"pallet-migrations/runtime-benchmarks",
	"pallet-mixnet/runtime-benchmarks",
	"pallet-mmr/runtime-benchmarks",
	"pallet-multisig/runtime-benchmarks",
	"pallet-nft-fractionalization/runtime-benchmarks",
	"pallet-nfts/runtime-benchmarks",
	"pallet-nis/runtime-benchmarks",
	"pallet-nomination-pools/runtime-benchmarks",
	"pallet-nomination-pools-benchmarking/runtime-benchmarks",
	"pallet-offences/runtime-benchmarks",
	"pallet-offences-benchmarking/runtime-benchmarks",
	"pallet-paged-list/runtime-benchmarks",
	"pallet-parachain-template/runtime-benchmarks",
	"pallet-parameters/runtime-benchmarks",
	"pallet-preimage/runtime-benchmarks",
	"pallet-proxy/runtime-benchmarks",
	"pallet-ranked-collective/runtime-benchmarks",
	"pallet-recovery/runtime-benchmarks",
	"pallet-referenda/runtime-benchmarks",
	"pallet-remark/runtime-benchmarks",
	"pallet-root-offences/runtime-benchmarks",
	"pallet-safe-mode/runtime-benchmarks",
	"pallet-salary/runtime-benchmarks",
	"pallet-sassafras/runtime-benchmarks",
	"pallet-scheduler/runtime-benchmarks",
	"pallet-session-benchmarking/runtime-benchmarks",
	"pallet-skip-feeless-payment/runtime-benchmarks",
	"pallet-society/runtime-benchmarks",
	"pallet-staking/runtime-benchmarks",
	"pallet-state-trie-migration/runtime-benchmarks",
	"pallet-sudo/runtime-benchmarks",
	"pallet-template/runtime-benchmarks",
	"pallet-timestamp/runtime-benchmarks",
	"pallet-tips/runtime-benchmarks",
	"pallet-transaction-storage/runtime-benchmarks",
	"pallet-treasury/runtime-benchmarks",
	"pallet-tx-pause/runtime-benchmarks",
	"pallet-uniques/runtime-benchmarks",
	"pallet-utility/runtime-benchmarks",
	"pallet-vesting/runtime-benchmarks",
	"pallet-whitelist/runtime-benchmarks",
	"pallet-xcm/runtime-benchmarks",
	"pallet-xcm-benchmarks/runtime-benchmarks",
	"pallet-xcm-bridge-hub/runtime-benchmarks",
	"pallet-xcm-bridge-hub-router/runtime-benchmarks",
	"parachain-template-runtime/runtime-benchmarks",
	"parachains-common/runtime-benchmarks",
	"penpal-runtime/runtime-benchmarks",
	"people-rococo-runtime/runtime-benchmarks",
	"people-westend-runtime/runtime-benchmarks",
	"polkadot-cli/runtime-benchmarks",
	"polkadot-node-metrics/runtime-benchmarks",
	"polkadot-parachain-primitives/runtime-benchmarks",
	"polkadot-primitives/runtime-benchmarks",
	"polkadot-runtime-common/runtime-benchmarks",
	"polkadot-runtime-parachains/runtime-benchmarks",
	"polkadot-service/runtime-benchmarks",
	"polkadot-test-client/runtime-benchmarks",
	"polkadot-test-runtime/runtime-benchmarks",
	"polkadot-test-service/runtime-benchmarks",
	"rococo-parachain-runtime/runtime-benchmarks",
	"rococo-runtime/runtime-benchmarks",
	"sc-client-db/runtime-benchmarks",
	"sc-service/runtime-benchmarks",
	"snowbridge-core/runtime-benchmarks",
	"snowbridge-pallet-ethereum-client/runtime-benchmarks",
	"snowbridge-pallet-ethereum-client-fixtures/runtime-benchmarks",
	"snowbridge-pallet-inbound-queue/runtime-benchmarks",
	"snowbridge-pallet-inbound-queue-fixtures/runtime-benchmarks",
	"snowbridge-pallet-outbound-queue/runtime-benchmarks",
	"snowbridge-pallet-system/runtime-benchmarks",
	"snowbridge-router-primitives/runtime-benchmarks",
	"snowbridge-runtime-common/runtime-benchmarks",
	"snowbridge-runtime-test-common/runtime-benchmarks",
	"solochain-template-runtime/runtime-benchmarks",
	"sp-runtime/runtime-benchmarks",
	"sp-staking/runtime-benchmarks",
	"staging-node-cli/runtime-benchmarks",
	"staging-node-inspect/runtime-benchmarks",
	"staging-xcm-builder/runtime-benchmarks",
	"staging-xcm-executor/runtime-benchmarks",
	"westend-runtime/runtime-benchmarks",
	"xcm-simulator-example/runtime-benchmarks"
 ]
try-runtime = [
	"asset-hub-rococo-runtime/try-runtime",
	"asset-hub-westend-runtime/try-runtime",
	"bridge-hub-rococo-runtime/try-runtime",
	"bridge-hub-westend-runtime/try-runtime",
	"collectives-westend-runtime/try-runtime",
	"contracts-rococo-runtime/try-runtime",
	"coretime-rococo-runtime/try-runtime",
	"coretime-westend-runtime/try-runtime",
	"cumulus-pallet-aura-ext/try-runtime",
	"cumulus-pallet-dmp-queue/try-runtime",
	"cumulus-pallet-parachain-system/try-runtime",
	"cumulus-pallet-solo-to-para/try-runtime",
	"cumulus-pallet-xcm/try-runtime",
	"cumulus-pallet-xcmp-queue/try-runtime",
	"cumulus-ping/try-runtime",
	"frame-benchmarking-pallet-pov/try-runtime",
	"frame-election-provider-support/try-runtime",
	"frame-executive/try-runtime",
	"frame-support/try-runtime",
	"frame-support-test/try-runtime",
	"frame-system/try-runtime",
	"frame-try-runtime/try-runtime",
	"glutton-westend-runtime/try-runtime",
	"kitchensink-runtime/try-runtime",
	"pallet-alliance/try-runtime",
	"pallet-asset-conversion/try-runtime",
	"pallet-asset-conversion-tx-payment/try-runtime",
	"pallet-asset-rate/try-runtime",
	"pallet-asset-tx-payment/try-runtime",
	"pallet-assets/try-runtime",
	"pallet-atomic-swap/try-runtime",
	"pallet-aura/try-runtime",
	"pallet-authority-discovery/try-runtime",
	"pallet-authorship/try-runtime",
	"pallet-babe/try-runtime",
	"pallet-bags-list/try-runtime",
	"pallet-balances/try-runtime",
	"pallet-beefy/try-runtime",
	"pallet-beefy-mmr/try-runtime",
	"pallet-bounties/try-runtime",
	"pallet-bridge-grandpa/try-runtime",
	"pallet-bridge-messages/try-runtime",
	"pallet-bridge-parachains/try-runtime",
	"pallet-bridge-relayers/try-runtime",
	"pallet-broker/try-runtime",
	"pallet-child-bounties/try-runtime",
	"pallet-collator-selection/try-runtime",
	"pallet-collective/try-runtime",
	"pallet-collective-content/try-runtime",
	"pallet-contracts/try-runtime",
	"pallet-conviction-voting/try-runtime",
	"pallet-core-fellowship/try-runtime",
	"pallet-default-config-example/try-runtime",
	"pallet-democracy/try-runtime",
	"pallet-dev-mode/try-runtime",
	"pallet-election-provider-e2e-test/try-runtime",
	"pallet-election-provider-multi-phase/try-runtime",
	"pallet-elections-phragmen/try-runtime",
	"pallet-example-basic/try-runtime",
	"pallet-example-kitchensink/try-runtime",
	"pallet-example-offchain-worker/try-runtime",
	"pallet-example-single-block-migrations/try-runtime",
	"pallet-example-split/try-runtime",
	"pallet-example-tasks/try-runtime",
	"pallet-examples/try-runtime",
	"pallet-fast-unstake/try-runtime",
	"pallet-glutton/try-runtime",
	"pallet-grandpa/try-runtime",
	"pallet-identity/try-runtime",
	"pallet-im-online/try-runtime",
	"pallet-indices/try-runtime",
	"pallet-insecure-randomness-collective-flip/try-runtime",
	"pallet-lottery/try-runtime",
	"pallet-membership/try-runtime",
	"pallet-message-queue/try-runtime",
	"pallet-migrations/try-runtime",
	"pallet-mixnet/try-runtime",
	"pallet-mmr/try-runtime",
	"pallet-multisig/try-runtime",
	"pallet-nft-fractionalization/try-runtime",
	"pallet-nfts/try-runtime",
	"pallet-nis/try-runtime",
	"pallet-node-authorization/try-runtime",
	"pallet-nomination-pools/try-runtime",
	"pallet-offences/try-runtime",
	"pallet-paged-list/try-runtime",
	"pallet-parachain-template/try-runtime",
	"pallet-parameters/try-runtime",
	"pallet-preimage/try-runtime",
	"pallet-proxy/try-runtime",
	"pallet-ranked-collective/try-runtime",
	"pallet-recovery/try-runtime",
	"pallet-referenda/try-runtime",
	"pallet-remark/try-runtime",
	"pallet-root-offences/try-runtime",
	"pallet-root-testing/try-runtime",
	"pallet-safe-mode/try-runtime",
	"pallet-salary/try-runtime",
	"pallet-sassafras/try-runtime",
	"pallet-scheduler/try-runtime",
	"pallet-scored-pool/try-runtime",
	"pallet-session/try-runtime",
	"pallet-skip-feeless-payment/try-runtime",
	"pallet-society/try-runtime",
	"pallet-staking/try-runtime",
	"pallet-state-trie-migration/try-runtime",
	"pallet-statement/try-runtime",
	"pallet-sudo/try-runtime",
	"pallet-template/try-runtime",
	"pallet-timestamp/try-runtime",
	"pallet-tips/try-runtime",
	"pallet-transaction-payment/try-runtime",
	"pallet-transaction-storage/try-runtime",
	"pallet-treasury/try-runtime",
	"pallet-tx-pause/try-runtime",
	"pallet-uniques/try-runtime",
	"pallet-utility/try-runtime",
	"pallet-vesting/try-runtime",
	"pallet-whitelist/try-runtime",
	"pallet-xcm/try-runtime",
	"pallet-xcm-bridge-hub/try-runtime",
	"pallet-xcm-bridge-hub-router/try-runtime",
	"parachain-template-runtime/try-runtime",
	"penpal-runtime/try-runtime",
	"people-rococo-runtime/try-runtime",
	"people-westend-runtime/try-runtime",
	"polkadot-cli/try-runtime",
	"polkadot-runtime-common/try-runtime",
	"polkadot-runtime-parachains/try-runtime",
	"polkadot-service/try-runtime",
	"rococo-runtime/try-runtime",
	"shell-runtime/try-runtime",
	"snowbridge-pallet-ethereum-client/try-runtime",
	"snowbridge-pallet-inbound-queue/try-runtime",
	"snowbridge-pallet-outbound-queue/try-runtime",
	"snowbridge-pallet-system/try-runtime",
	"solochain-template-runtime/try-runtime",
	"sp-runtime/try-runtime",
	"staging-node-cli/try-runtime",
	"staging-parachain-info/try-runtime",
	"substrate-cli-test-utils/try-runtime",
	"try-runtime-cli/try-runtime",
	"westend-runtime/try-runtime"
 ]
